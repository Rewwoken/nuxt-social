generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @map("user_id")
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  profile Profile?

  posts Post[]

  mediFiles MediaFile[]

  @@map("user")
}

model Profile {
  id        String   @id @default(uuid()) @map("profile_id")
  name      String?
  bio       String?
  location  String?
  website   String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  imageUrl        String?
  imageProviderId String? @map("image_provider_id")

  bannerUrl        String?
  bannerProviderId String? @map("banner_provider_id")

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("profile")
}

model Post {
  id        String   @id @default(uuid()) @map("post_id")
  text      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  replyTo   Post?   @relation("PostReplies", fields: [replyToId], references: [id])
  replyToId String? @map("reply_to_id")

  replies Post[] @relation("PostReplies")

  mediaFiles MediaFile[]

  @@map("post")
}

model MediaFile {
  id         String   @id @default(uuid()) @map("user_id")
  url        String
  providerId String   @map("provider_id")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  post   Post?   @relation(fields: [postId], references: [id])
  postId String?

  @@map("media_file")
}
